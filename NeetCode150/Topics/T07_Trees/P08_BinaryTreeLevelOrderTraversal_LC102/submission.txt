1, Accepted
{
    "date": "2024-10-07T22:00:55.207Z",
    "statusDescription": "Accepted",
    "code": "/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     public int val;\n *     public TreeNode left;\n *     public TreeNode right;\n *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n \npublic class Solution {\n    public List<List<int>> LevelOrder(TreeNode root) {\n        return bfs1(root);   \n    }\n\n    public List<List<int>> bfs1(TreeNode root) \n    {\n        List<List<int>> res = new();\n        Queue<TreeNode> q = new();\n        q.Enqueue(root);\n        while(q.Count>0)\n        {\n            List<int> curLevel = new();\n            var curLevelCount = q.Count;\n            for(int i=0; i<curLevelCount; i++)\n            {\n                var node = q.Dequeue();\n                if(node == null) continue;\n                \n                curLevel.Add(node.val);\n\n                q.Enqueue(node.left);\n                q.Enqueue(node.right);\n            }\n            if(curLevel.Count>0) res.Add(curLevel);\n        }\n        return res;\n    }\n}\n",
    "memory": 51212,
    "stdout": "",
    "language": "csharp",
    "time": "0.923",
    "problemId": "level-order-traversal-of-binary-tree",
    "stderr": ""
}