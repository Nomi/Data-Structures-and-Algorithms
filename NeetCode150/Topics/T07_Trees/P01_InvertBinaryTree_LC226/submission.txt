2, Accepted
{
    "date": "2024-10-01T20:28:10.344Z",
    "statusDescription": "Accepted",
    "code": "/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     public int val;\n *     public TreeNode left;\n *     public TreeNode right;\n *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\npublic class Solution {\n    public TreeNode InvertTree(TreeNode root) {\n        //REMEMBER TO CHECK FOR NULL (leafs)!!!\n        return iterative1(root);\n    }\n\n    public TreeNode iterative1(TreeNode root)\n    {\n        Queue<TreeNode> q = new();\n        q.Enqueue(root);\n        while(q.Count>0)\n        {\n            var cur = q.Dequeue();\n            if(cur==null) //I FORGOT THIS SOMEHOW!!! :'(\n                continue;\n            var l = cur.left;\n            var r = cur.right;\n            q.Enqueue(l);\n            q.Enqueue(r);\n            cur.left = r;\n            cur.right = l;\n        }\n        return root;\n    }\n    \n}\n",
    "memory": 51548,
    "stdout": "",
    "language": "csharp",
    "time": "0.751",
    "problemId": "invert-a-binary-tree",
    "stderr": ""
}