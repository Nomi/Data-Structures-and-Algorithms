1, Accepted
{
    "date": "2024-10-07T22:42:37.310Z",
    "statusDescription": "Accepted",
    "code": "/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     public int val;\n *     public TreeNode left;\n *     public TreeNode right;\n *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\npublic class Solution {\n    public int GoodNodes(TreeNode root) {\n        return rec1Dfs(root, int.MinValue);\n    }\n\n    public int rec1Dfs(TreeNode root, int maxThusFar)\n    {\n        if(root == null)\n            return 0;\n        int curSum = root.val>=maxThusFar ? 1 : 0; //IMPORTANT: DID NOT REALIZE I HAD TO DO >= instead of just > at first.\n        \n        curSum += rec1Dfs(root.left, (int)Math.Max(maxThusFar, root.val));\n        curSum += rec1Dfs(root.right, (int)Math.Max(maxThusFar, root.val));\n\n        return curSum;\n    }\n}\n",
    "memory": 51448,
    "stdout": "",
    "language": "csharp",
    "time": "0.727",
    "problemId": "count-good-nodes-in-binary-tree",
    "stderr": ""
}