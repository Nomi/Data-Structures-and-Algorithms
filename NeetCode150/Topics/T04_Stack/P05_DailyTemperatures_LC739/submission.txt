3, Accepted
{
    "date": "2024-09-18T22:24:16.111Z",
    "statusDescription": "Accepted",
    "code": "public class Solution {\n    public int[] DailyTemperatures(int[] temperatures) {\n        return attempt1(temperatures); //USE FOR COMMENTS/LEARNING\n        //REFER TO NC.IO SOLUTION FOR CLEANER SOLUTION (good learning opportunity to improve my style as well!)\n    }\n    public int[] attempt1(int[] temperatures)\n    {\n        //Monotonic increasing stack (big elements on top)\n        //If we start from the back, and encounter bigger elements than the previous ones,\n        //those definitely can't be the next bigger element\n        //considering that at least this 1 element is bigger than them\n        //and is before them. As such, we remove all (and ONLY) those from stack\n        //in that case (which also keeps the stack monotonically increasing). \n        \n        Stack<int> idxStk = new();\n        int[] res = new int[temperatures.Length];\n        idxStk.Push(temperatures.Length-1);\n        res[temperatures.Length-1]=0;\n        \n        for(int i=temperatures.Length-2;i>=0;i--)\n        {\n            //Removes all indexes NOT bigger than it.\n            //NEEDS >= BECAUSE THE TEMPERATURE NEEDS TO BE\n            //STRICTLY BIGGER (on the later day, not on i)\n            while(idxStk.Count>0&&temperatures[i]>=temperatures[idxStk.Peek()])\n            {\n                idxStk.Pop();\n            }\n            \n            //Happens if this is the index with biggest temp thus far.\n            if(idxStk.Count==0)\n            {\n                res[i]=0;\n            }\n            else //There's a bigger index.\n            {\n                //days AFTER => not inclusive => no need to +1\n                res[i] = idxStk.Peek()-i; //peek gives us the next biggest element.\n            }\n\n            idxStk.Push(i); //we add the element on the top (the while loop above guarantees that the stack remains monotonically decreasing).\n        }\n\n        return res;\n    }\n}\n",
    "memory": 53144,
    "stdout": "",
    "language": "csharp",
    "time": "0.74",
    "problemId": "daily-temperatures",
    "stderr": ""
}