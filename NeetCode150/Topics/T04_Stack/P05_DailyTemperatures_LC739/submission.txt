1, Wrong Answer
{
    "date": "2024-09-18T21:38:43.350Z",
    "statusDescription": "Wrong Answer",
    "code": "public class Solution {\n    public int[] DailyTemperatures(int[] temperatures) {\n        return attempt1(temperatures);\n    }\n    public int[] attempt1(int[] temperatures)\n    {\n        //Monotonic increasing stack (big elements on top)\n        //If we start from the back, and encounter a bigger element than the others,\n        //definitely the ones after that can't be the next bigger element\n        //considering that at least this 1 element is bigger than them\n        //and is before them. As such, we remove all those from stack\n        //in that case (which also keeps the stack monotonically increasing). \n        //Therefore,\n        Stack<int> idxStk = new();\n        int[] res = new int[temperatures.Length];\n        idxStk.Push(temperatures.Length-1);\n        res[temperatures.Length-1]=0;\n        \n        for(int i=temperatures.Length-2;i>=0;i--)\n        {\n            while(idxStk.Count>0&&temperatures[i]>temperatures[idxStk.Peek()])\n            {\n                idxStk.Pop();\n            }\n                        \n            if(idxStk.Count==0)\n            {\n                res[i]=0;\n            }\n            else\n            {\n                //days AFTER => not inclusive => no need to +1\n                res[i] = idxStk.Peek()-i;\n            }\n\n            idxStk.Push(i);\n        }\n\n        return res;\n    }\n}\n",
    "memory": 51924,
    "stdout": "",
    "language": "csharp",
    "time": "0.714",
    "problemId": "daily-temperatures",
    "stderr": ""
}