2, Accepted
{
    "date": "2024-09-14T18:11:20.594Z",
    "statusDescription": "Accepted",
    "code": "public class Solution {\n    // We are given Each product is guaranteed to fit in a 32-bit integer.\n    //BUT it might serve as a GREAT CLARIFYING QUESTION!!\n    public int[] ProductExceptSelf(int[] nums) {\n        // return attempt1(nums);\n        return attempt2(nums);\n    }\n\n    public int[] attempt1(int[] nums) {\n        int[] output = new int[nums.Count()];\n        int product = 1; //from right to here\n        for(int i=nums.Count()-2;i>=0;i--)//-2 cuz we don't need the product there.\n        {\n            product*=nums[i+1];\n            output[i]=product;\n        }\n        product = 1;//now from lhs\n        for(int i=0;i<nums.Count()-1;i++)\n        {\n            output[i]=output[i]*product;\n            product*=nums[i];\n        }\n        output[nums.Count()-1]=product;\n        return output;\n    }\n\n\n    public int[] attempt2(int[] nums)\n    {\n        var res = new int[nums.Count()];\n\n        res[0]=1;\n        for(int i=1;i<nums.Count();i++) //we fill result array with product of nums from L.H.S (except itself)\n        {\n            res[i]=res[i-1]*nums[i-1];\n        }\n\n        int product = 1;\n        for(int i=nums.Count()-1;i>=0;i--) //WE NEED PRODUCT CUZ WE AREN'T STORING THIS PRODUCT ANYWHERE (theoretically we could use nums array for it)\n        {\n            res[i]*=product;\n            product*=nums[i];\n        }\n        \n        return res;\n    }\n}\n",
    "memory": 53588,
    "stdout": "",
    "language": "csharp",
    "time": "0.858",
    "problemId": "products-of-array-discluding-self",
    "stderr": ""
}