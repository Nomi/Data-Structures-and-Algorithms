1, Accepted
{
    "language": "csharp",
    "code": "public class Solution {\n    public int MinCostClimbingStairs(int[] cost) {\n        //This is like fibonacci, so the shared basecase would be right at the last step.\n        //Also like my solution to `climbing stairs` so check that.\n        //I HAD AN ERROR BECAUSE JUST PAST LAST INDEX IMPLIES nubCistAtiPlust2 = 0 and our loop starts from i = cost.Length-2\n        int minCostAt_iPlus2 = cost[cost.Length - 1];\n        int minCostAt_iPlus1 = cost[cost.Length - 2];\n        \n        for(int i = cost.Length - 3; i >= 0; i--)\n        {\n            int curCost = cost[i];\n            curCost += (int)Math.Min(minCostAt_iPlus1, minCostAt_iPlus2);\n            \n            minCostAt_iPlus2 = minCostAt_iPlus1;\n            minCostAt_iPlus1 = curCost;\n        }\n        \n        //TOOK ME  20 MINUTES TO FIGURE OUT (and even chatGPT had to find it) that:\n        //  After iterating through all steps, the minimum cost to reach the top can be achieved by starting either from step 0 or step 1. Therefore, the final return value should be the minimum of the costs associated with these two starting points.\n        // SHOULD'VE READ THE DESCRIPTION BECAUSE IT STATES: You may choose to start at the index 0 or the index 1 floor.\n        return (int)Math.Min(minCostAt_iPlus1, minCostAt_iPlus2);;\n    }\n}\n",
    "problemId": "min-cost-climbing-stairs",
    "statusDescription": "Accepted",
    "time": "0.408",
    "date": "2024-12-01T19:21:09.934Z",
    "memory": 56288,
    "stdout": "",
    "stderr": ""
}