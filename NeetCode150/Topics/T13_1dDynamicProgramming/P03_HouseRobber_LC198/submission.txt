1, Accepted
{
    "language": "csharp",
    "code": "public class Solution {\n    public int Rob(int[] nums) {\n        return dfsWrapper1(nums);\n    }\n\n    int dfsWrapper1(int[] nums)\n    {\n        var maxProfit = new int[nums.Length];\n        Array.Fill(maxProfit, -1);\n        return dfs(0, nums, maxProfit);\n    }\n\n    int dfs(int house, int[] nums, int[] maxProfit)\n    {\n        if(house >= nums.Length) //HAD > earlier\n            return 0;\n        \n        if(maxProfit[house] == -1)\n        {\n            int dontRobCur = dfs(house+1, nums, maxProfit);\n\n            int robCur = nums[house] + dfs(house+2, nums, maxProfit);//cant rob next house\n            \n            maxProfit[house] = robCur > dontRobCur ? robCur : dontRobCur;\n        }\n\n        return maxProfit[house];\n    }\n}\n",
    "problemId": "house-robber",
    "statusDescription": "Accepted",
    "time": "0.409",
    "date": "2024-12-01T21:53:59.131Z",
    "memory": 56332,
    "stdout": "",
    "stderr": ""
}