1, Accepted
{
    "date": "2024-09-26T01:31:06.624Z",
    "statusDescription": "Accepted",
    "code": "/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     public int val;\n *     public ListNode next;\n *     public ListNode(int val=0, ListNode next=null) {\n *         this.val = val;\n *         this.next = next;\n *     }\n * }\n */\n\npublic class Solution {\n    public bool HasCycle(ListNode head) {\n        //Here's why it works: https://github.com/Chanda-Abdul/Several-Coding-Patterns-for-Solving-Data-Structures-and-Algorithms-Problems-during-Interviews/blob/main/%E2%9C%85%20%20Pattern%2003:%20Fast%20%26%20Slow%20pointers.md\n        //You can also check on paper for even and odd lengths.\n        return attempt1(head);\n    }\n\n    public bool attempt1(ListNode head)\n    {\n        var fast = head?.next; //Hare\n        var slow = head; //Tortoise\n\n        while(fast!=null)\n        {\n            fast = fast.next?.next;\n            slow = slow.next;\n            if(fast==slow)\n                return true;\n        }\n        return false;\n    }\n}\n",
    "memory": 57908,
    "stdout": "",
    "language": "csharp",
    "time": "0.473",
    "problemId": "linked-list-cycle-detection",
    "stderr": ""
}