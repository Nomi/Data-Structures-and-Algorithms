1, Accepted
{
    "date": "2024-09-22T00:06:21.804Z",
    "statusDescription": "Accepted",
    "code": "public class Solution {\n    public int Search(int[] nums, int target) {\n        return attempt1(nums,target);\n    }\n\n    public int attempt1HelperFindMinElemIdx(int[] nums)\n    {\n        //Based on solution of Minimum in Rotated Sorted Array\n        int l=0, r=nums.Length-1;\n        while(l<r)\n        {\n            int m = (l+r)/2; //== l + (r-l)/2 = (2l-l+r)/2 = (l+r)/2\n            if(nums[m]>nums[r])\n                l=m+1;\n            else\n                r = m;\n        }\n        return l; //l==r\n    }\n    public int attempt1(int[] nums, int target)\n    {\n        int minElemIdx = attempt1HelperFindMinElemIdx(nums);\n        int l = minElemIdx, r = minElemIdx+nums.Length-1;\n        //we use modulo to pretend we copied the array and pasted it right at the end of it,\n        //then we have the full array from l to the above r.\n        while(l<=r)\n        {\n            int m = (l+r)/2; //== l + (r-l)/2 = (2l-l+r)/2 = (l+r)/2\n            if(target<nums[m%nums.Length])\n                r=m-1;\n            else if(target>nums[m%nums.Length])\n                l=m+1;\n            else // ==\n                return (m%nums.Length);\n        }\n        return -1;\n    }\n}\n",
    "memory": 52904,
    "stdout": "",
    "language": "csharp",
    "time": "0.753",
    "problemId": "find-target-in-rotated-sorted-array",
    "stderr": ""
}