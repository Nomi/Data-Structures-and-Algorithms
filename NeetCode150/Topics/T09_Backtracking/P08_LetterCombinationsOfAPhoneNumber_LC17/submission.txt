1, Wrong Answer
{
    "language": "csharp",
    "code": "public class Solution {\n    public List<string> LetterCombinations(string digits) {\n        return backtrack1(digits);\n    }\n\n    public List<string> backtrack1(string digits)\n    {\n        if(digits.Length == 0) //WHY DID I NOT THINK OF THIS??? (had to look at example to get it!) //GOOD EXAMPLE OF CLARIFICATION QUESTIONS!!\n            return new();\n\n        //THE SECOND CONSTRAINT IS ALSO A GOOD CLARIFICATION QUESTION! (will there be 1 or any other number that doesn't have representation, how about 0??)\n        //ALSO, MAYBE SHOULD ASK IF THE OUTPUT SHOULD BE UPPERCASE OR LOWERCASE (had used uppercase so I had to change after looking at example output)\n        Dictionary<char, List<string>> map = new(){\n            {'2', new(){\"a\", \"b\", \"c\"}},\n            {'3', new(){\"d\", \"e\", \"f\"}},\n            {'4', new(){\"g\", \"h\", \"i\"}},\n            {'5', new(){\"j\", \"k\", \"l\"}},\n            {'6', new(){\"m\", \"n\", \"o\"}},\n            {'7', new(){\"p\", \"q\", \"r\", \"s\"}},\n            {'8', new(){\"t\", \"u\", \"v\"}},\n            {'9', new(){\"x\", \"y\", \"z\"}},\n        };\n        List<string> res = new(1<<digits.Length);\n\n        backtrack1Helper(digits, idx: 0, map, curStr: \"\", res);\n\n        return res;\n    }\n\n    public void backtrack1Helper(string digits, int idx, Dictionary<char, List<string>> map, String curStr, List<string> res)\n    {\n        if(idx == digits.Length)\n        {\n            res.Add(curStr);\n            return;\n        }\n        \n        foreach(var c in map[digits[idx]])\n        {\n            //curStr.Append() is O(m) where m is max length of digits string, here 4, so very small impact.\n            backtrack1Helper(digits, idx+1, map, string.Concat(curStr,c), res);\n        }\n        return;\n    }\n}\n",
    "problemId": "combinations-of-a-phone-number",
    "statusDescription": "Wrong Answer",
    "time": "0.502",
    "date": "2024-11-05T03:44:13.684Z",
    "memory": 52552,
    "stdout": "",
    "stderr": ""
}